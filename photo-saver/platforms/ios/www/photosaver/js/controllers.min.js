/*
 * controllers v  (build 20160708_152457_1)
 * Copyright (c) 2016
 * Author: Chad Keibler 
 */

angular.module("ConfigurationCtrl",[]).controller("ConfigurationCtrl",["$rootScope","$http","$mdToast","$location",function(a,b,c,d){var e=this;e.title="NodeJS Sample Application",a.isLoggedIn=!0,e.redir=function(a){d.path(a)},e.showSimpleToast=function(a){c.showSimple(a)},e.editConfig=function(a){e.selectedConfig=a,e.editing=!0},e.cancelEdit=function(){e.selectedConfig=null,e.editing=!1,e.adding=!1},e.updateConfig=function(){var a={method:"PUT",url:"/configs",headers:{"Content-Type":"application/json"},data:{config:e.selectedConfig}};b(a).success(function(){e.configs=e.getConfigs(),e.selectedConfig=null,e.editing=!1,e.adding=!1,e.showSimpleToast("Configuration updated successfully")}).error(function(){e.showSimpleToast("Configuration failed to update")})},e.deleteConfig=function(){var a="/configs?id="+e.selectedConfig.username;b["delete"](a).then(function(a){e.configs=e.getConfigs(),e.selectedConfig=null,e.editing=!1,e.showSimpleToast("Configuration deleted")},function(){e.showSimpleToast("Deletion failed")})},e.addConfig=function(){if(!(e.selectedConfig.name&&e.selectedConfig.hostname&&e.selectedConfig.port&&e.selectedConfig.username))return void e.showSimpleToast("All values are required.");var a={method:"POST",url:"/configs",headers:{"Content-Type":"application/json"},data:{config:e.selectedConfig}};b(a).success(function(){e.configs=e.getConfigs(),e.selectedConfig=null,e.adding=!1,e.showSimpleToast("Configuration updated successfully")}).error(function(){e.showSimpleToast("Configuration failed to update")})},e.showAdd=function(){e.selectedConfig={},e.adding=!0},e.getPrev=function(){var a=e.page-1;b.get("/configs?page="+a+"&pagesize="+e.pageSize+"&sortby="+e.sortValue+"&sortorder="+e.sortOrder).then(function(b){1===a?(e.totalDisplayed=e.pageSize,e.totalConfigs=b.data.total):e.totalDisplayed>e.totalConfigs?e.totalDisplayed=e.totalDisplayed-e.totalConfigs:e.totalDisplayed-=e.configs.length,e.configs=b.data.sorted,e.totalConfigs=b.data.total,e.page=a},function(a){401===a.status?e.showSimpleToast("Unauthorized user!"):e.showSimpleToast("Unable to retrieve configs.")})},e.getNext=function(){var a=e.page+1;b.get("/configs?page="+a+"&pagesize="+e.pageSize+"&sortby="+e.sortValue+"&sortorder="+e.sortOrder).then(function(b){e.page=a,e.totalConfigs=b.data.total,e.configs=b.data.sorted,e.totalDisplayed+=b.data.sorted.length},function(a){401===a.status?e.showSimpleToast("Unauthorized user!"):e.showSimpleToast("Unable to retrieve configurations")})},e.getConfigs=function(){b.get("/configs?page=1&pagesize="+e.pageSize+"&sortby="+e.sortBy+"&sortorder="+e.sortOrder).then(function(a){e.showSimpleToast("sorting by "+e.sortBy+" "+e.sortOrder+" and displaying page 1"),e.totalDisplayed=e.pageSize,e.totalConfigs=a.data.total,e.configs=a.data.sorted,e.page=1},function(a){401===a.status?e.showSimpleToast("Unauthorized user!"):e.showSimpleToast("Unable to retrieve configs.")})},e.sort=function(a){e.sortBy=a,e.toggleSortOrder(),e.getConfigs(a)},e.toggleSortOrder=function(){"asc"===e.sortOrder?e.sortOrder="desc":e.sortOrder="asc"},e.init=function(){e.adding=!1,e.selectedConfig=null,e.editing=!1,e.page=1,e.sortBy="name",e.pageSize=5,e.totalDisplayed=0,e.sortOrder="asc",e.configs=e.getConfigs()},e.init()}]),angular.module("LoginCtrl",[]).controller("LoginCtrl",["$rootScope","$http","$mdToast","$location",function(a,b,c,d){var e=this;e.init=function(){e.username="",e.password="",a.isLoggedIn=!1,e.redirectDelay=1e3},e.showSimpleToast=function(a){c.showSimple(a)},e.redir=function(a){setTimeout(function(){d.path(a)},e.redirectDelay)},e.login=function(){if(!e.username||!e.password)return void e.showSimpleToast("username and password are required!");var a=btoa(e.username+":"+e.password);b.defaults.headers.common.Authorization="Basic "+a;var c={method:"GET",url:"/validateUser",data:{config:e.selectedConfig}};b(c).success(function(){e.showSimpleToast("Login Successful! redirecting..."),e.redir("/user-configurations")}).error(function(a){"401 Unauthorized"===a?e.showSimpleToast("Unauthorized user!"):e.showSimpleToast("an error has occurred.")})}}]);