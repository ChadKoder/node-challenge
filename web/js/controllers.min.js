/*
 * controllers v  (build 20160706_094837_1)
 * Copyright (c) 2016
 * Author: Chad Keibler 
 */

angular.module("ConfigurationCtrl",[]).controller("ConfigurationCtrl",["$http","$mdToast","$location",function(a,b,c){var d=this;d.title="NodeJS Sample Application",d.redir=function(a){c.path(a)},d.logout=function(){a({method:"POST",url:"/logout"}).then(function(a){d.showSimpleToast("Logging out..."),d.redir("/")},function(a){d.showSimpleToast("lougout failed... strange...")})},d.showSimpleToast=function(a){b.showSimple(a)},d.editConfig=function(a){d.selectedConfig=a,d.editing=!0},d.cancelEdit=function(){d.selectedConfig=null,d.editing=!1,d.adding=!1},d.updateConfig=function(){var b={method:"PUT",url:"/configs",headers:{"Content-Type":"application/json"},data:{config:d.selectedConfig}};a(b).success(function(){d.configs=d.getConfigs(),d.selectedConfig=null,d.editing=!1,d.adding=!1,d.showSimpleToast("Configuration updated successfully")}).error(function(){d.showSimpleToast("Configuration failed to update")})},d.deleteConfig=function(){var b="/configs?id="+d.selectedConfig.username;a["delete"](b).then(function(a){d.configs=d.getConfigs(),d.selectedConfig=null,d.editing=!1,d.showSimpleToast("Configuration deleted")},function(){d.showSimpleToast("Deletion failed")})},d.addConfig=function(){if(!(d.selectedConfig.name&&d.selectedConfig.hostname&&d.selectedConfig.port&&d.selectedConfig.username))return void d.showSimpleToast("All values are required.");var b={method:"POST",url:"/configs",headers:{"Content-Type":"application/json"},data:{config:d.selectedConfig}};a(b).success(function(){d.configs=d.getConfigs(),d.selectedConfig=null,d.adding=!1,d.showSimpleToast("Configuration updated successfully")}).error(function(){d.showSimpleToast("Configuration failed to update")})},d.showAdd=function(){d.selectedConfig={},d.adding=!0},d.getPrev=function(){var b=d.page-1;a.get("/configs?page="+b+"&pagesize="+d.pageSize+"&sortby="+d.sortValue+"&sortorder="+d.sortOrder).then(function(a){1===b?(d.totalDisplayed=d.pageSize,d.totalConfigs=a.data.total):d.totalDisplayed>d.totalConfigs?d.totalDisplayed=d.totalDisplayed-d.totalConfigs:d.totalDisplayed-=d.configs.length,d.configs=a.data.sorted,d.totalConfigs=a.data.total,d.page=b},function(a){401===a.status?d.showSimpleToast("Unauthorized user!"):d.showSimpleToast("Unable to retrieve configs.")})},d.getNext=function(){var b=d.page+1;a.get("/configs?page="+b+"&pagesize="+d.pageSize+"&sortby="+d.sortValue+"&sortorder="+d.sortOrder).then(function(a){d.page=b,d.totalConfigs=a.data.total,d.configs=a.data.sorted,d.totalDisplayed+=a.data.sorted.length},function(a){401===a.status?d.showSimpleToast("Unauthorized user!"):d.showSimpleToast("Unable to retrieve configurations")})},d.getConfigs=function(){a.get("/configs?page=1&pagesize="+d.pageSize+"&sortby="+d.sortBy+"&sortorder="+d.sortOrder).then(function(a){d.showSimpleToast("sorting by "+d.sortBy+" "+d.sortOrder+" and displaying page 1"),d.totalDisplayed=d.pageSize,d.totalConfigs=a.data.total,d.configs=a.data.sorted,d.page=1},function(a){401===a.status?d.showSimpleToast("Unauthorized user!"):d.showSimpleToast("Unable to retrieve configs.")})},d.sort=function(a){d.sortBy=a,d.toggleSortOrder(),d.getConfigs(a)},d.toggleSortOrder=function(){"asc"===d.sortOrder?d.sortOrder="desc":d.sortOrder="asc"},d.init=function(){d.adding=!1,d.selectedConfig=null,d.editing=!1,d.page=1,d.sortBy="name",d.pageSize=5,d.totalDisplayed=0,d.sortOrder="asc",d.configs=d.getConfigs()},d.init()}]),angular.module("LoginCtrl",[]).controller("LoginCtrl",["$http","$mdToast","$location",function(a,b,c){var d=this;d.title="NodeJS Sample Application",d.username="",d.password="";var e=1e3;d.showSimpleToast=function(a){b.showSimple(a)},d.redir=function(a){setTimeout(function(){c.path(a)},e)},d.login=function(){if(!d.username||!d.password)return void d.showSimpleToast("username and password are required!");var b=btoa(d.username+":"+d.password);a.defaults.headers.common.Authorization="Basic "+b;var c={method:"GET",url:"/validateUser",data:{config:d.selectedConfig}};a(c).success(function(){d.showSimpleToast("Login Successful! redirecting..."),d.redir("/user-configurations")}).error(function(a){"401 Unauthorized"===a?d.showSimpleToast("Unauthorized user!"):d.showSimpleToast("an error has occurred.")})}}]);